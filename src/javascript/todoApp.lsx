
{ filter, map, zip } = require "prelude-ls"

TodoItem = React.create-class do

    on-change: (e) ->
        e.target.checked
        |> @props.on-finished-change

    render: ->
        ``<span>
            <input type="checkbox" checked={this.props.finished} id={this.props.text} onChange={this.onChange} />
            <label htmlFor={this.props.text}>{this.props.text}</label>
            <button className="del" onClick={this.props.onDelete}>X</button>
          </span>``

TodoList = React.create-class do

    get-initial-state: ->
        name: "default"
        items: []
        text: ""

    component-did-mount: !->
        list = todo-storage.load-list @props.list-index
        @set-state do
            if list
                name: list.name ? "default"
                items: list.items ? []
            else
                name: "default"
                items: []

    save-list: (new-items) !->
        todo-storage.save-list @props.list-index, { name: @state.name, items: new-items }

    on-change: (e) !->
        @set-state { text: e.target.value }

    handle-submit: (e) ->
        e.prevent-default!
        new-items = @state.items ++ [ text: @state.text, finished: false ]
        @set-state do
            items: new-items
            text: ""
        @save-list new-items
        false

    create-item: (item) ->

        on-delete = (e) ~>
            e.prevent-default!
            new-items = @state.items
                        |> filter (x) -> x != item
            @set-state items: new-items
            @save-list new-items
            false

        on-finished-change = (x) ~>
            item.finished = x
            new-items = @state.items
            @set-state items: new-items
            @save-list new-items
            false

        ``<li>
            <TodoItem text={item.text} finished={item.finished} onDelete={onDelete} onFinishedChange={onFinishedChange}/>
          </li>``

    render: ->
        children = @state.items
                   |> map (@createItem)
        ``<div id="todo_list">
            <h4>{this.state.name}</h4>
            <ul>{children}</ul>
            <form onSubmit={this.handleSubmit}>
                <input onChange={this.onChange} value={this.state.text} />
                <button>Add</button>
            </form>
          </div>``

TodoApp = React.create-class do
    
    get-initial-state: ->
        lists: []

    component-did-mount: !->
        @set-state do
            lists: todo-storage.load-lists! ? []

    save-lists: !->
        todo-storage.save-lists @lists

    render: ->
        ``<div>
            <div id="todo_lists"></div>
            <TodoList listIndex={0} />
            <div className="clear"></div>
          </div>``

React.render do
    ``<TodoApp />``
    document.get-element-by-id "todo_app"
