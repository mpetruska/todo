// Generated by LiveScript 1.3.1
(function(){
  var ref$, filter, map, zip, TodoItem, TodoList, TodoApp;
  ref$ = require("prelude-ls"), filter = ref$.filter, map = ref$.map, zip = ref$.zip;
  TodoItem = React.createClass({displayName: "TodoItem",
    onChange: function(e){
      return this.props.onFinishedChange(
      e.target.checked);
    },
    render: function(){
      return React.createElement("span", null, 
          React.createElement("input", {type: "checkbox", checked: this.props.finished, id: this.props.text, onChange: this.onChange}), 
          React.createElement("label", {htmlFor: this.props.text}, this.props.text), 
          React.createElement("button", {className: "del", onClick: this.props.onDelete}, "X")
        );
    }
  });
  TodoList = React.createClass({displayName: "TodoList",
    createItem: function(item){
      var onDelete, onFinishedChange, this$ = this;
      onDelete = function(e){
        return this$.props.onDelete(e, item);
      };
      onFinishedChange = function(x){
        return this$.props.onFinishedChange(item, x);
      };
      return React.createElement("li", null, React.createElement(TodoItem, {text: item.text, finished: item.finished, onDelete: onDelete, onFinishedChange: onFinishedChange}));
    },
    render: function(){
      var children;
      children = map(this.createItem)(
      this.props.items);
      return React.createElement("ul", null, children);
    }
  });
  TodoApp = React.createClass({displayName: "TodoApp",
    getInitialState: function(){
      return {
        items: [],
        text: ""
      };
    },
    componentDidMount: function(){
      var ref$;
      return this.setState({
        items: (ref$ = todoStorage.loadLists()[0]) != null
          ? ref$
          : []
      });
    },
    saveLists: function(lists){
      todoStorage.saveLists(lists);
    },
    onChange: function(e){
      this.setState({
        text: e.target.value
      });
    },
    onDelete: function(e, item){
      var newItems;
      e.preventDefault();
      newItems = filter(function(x){
        return x !== item;
      })(
      this.state.items);
      this.setState({
        items: newItems
      });
      this.saveLists([newItems]);
    },
    onFinishedChange: function(item, x){
      var newItems;
      item.finished = x;
      newItems = this.state.items;
      this.setState({
        items: newItems
      });
      this.saveLists([newItems]);
    },
    handleSubmit: function(e){
      var newItems;
      e.preventDefault();
      newItems = this.state.items.concat([{
        text: this.state.text,
        finished: false
      }]);
      this.setState({
        items: newItems,
        text: ""
      });
      this.saveLists([newItems]);
    },
    render: function(){
      return React.createElement("div", {class: "todo_app"}, 
          React.createElement("h3", null, "TODO"), 
          React.createElement(TodoList, {items: this.state.items, onDelete: this.onDelete, onFinishedChange: this.onFinishedChange}), 
          React.createElement("form", {onSubmit: this.handleSubmit}, 
              React.createElement("input", {onChange: this.onChange, value: this.state.text}), 
              React.createElement("button", null, "Add")
          )
        );
    }
  });
  React.render(React.createElement(TodoApp, null), document.getElementById("todo_app"));
}).call(this);
