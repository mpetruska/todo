// Generated by LiveScript 1.3.1
(function(){
  var ref$, curry, each, map, unfoldr, zip;
  ref$ = require("prelude-ls"), curry = ref$.curry, each = ref$.each, map = ref$.map, unfoldr = ref$.unfoldr, zip = ref$.zip;
  window.todoStorage = {
    loadLists: function(){
      var e;
      try {
        return map(JSON.parse)(
        unfoldr(function(i){
          var that;
          if (that = localStorage.getItem("todo-" + i)) {
            return [that, i + 1];
          } else {
            return null;
          }
        }, 0));
      } catch (e$) {
        e = e$;
        console.log(e);
        return null;
      }
    },
    saveList: function(arg$){
      var i, list;
      i = arg$[0], list = arg$[1];
      return localStorage.setItem("todo-" + i, JSON.stringify(
      list));
    },
    saveLists: function(lists){
      var e;
      try {
        each(todoStorage.saveList)(
        zip((function(){
          var i$, to$, results$ = [];
          for (i$ = 0, to$ = lists.length; i$ < to$; ++i$) {
            results$.push(i$);
          }
          return results$;
        }()))(
        lists));
        return true;
      } catch (e$) {
        e = e$;
        console.log(e);
        return false;
      }
    }
  };
}).call(this);
